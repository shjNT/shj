// 内存分区模型

c++程序执行时，将内存大方向分为4个区域: 不同区域存放的数据，会赋予不同的生命周期
① 代码区:存放函数体的二进制代码，由操作系统进行管理；
② 全局区:存放全局变量和静态变量以及常量；
③ 栈区:由编译器自动分配释放，存放函数的参数值，局部变量等；
④ 堆区:由程序员分配和释放，若程序员不释放，程序结束系统收回；


1.1 程序运行前
(1) 代码区(cpu执行的机器指令):共享、只读
(2) 全局区: 全局变量、静态变量、常量(字符串常量和其他常量 -const修饰): 程序结束后操作系统释放

1.2 程序运行后
（1）栈区:
    ①由编译器自动分配释放，存放函数的参数值，局部变量等；
    ②不要返回局部变量的地址，因为栈区开辟的数据由编译器自动释放
（2）堆区:
    ①由程序员分配和释放，若程序员不释放，程序结束系统收回；
    ②在c++中利用new在堆区开辟内存